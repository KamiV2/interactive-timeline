{"version":3,"sources":["index.js","App.js","TestSlider.js","bib.pdf","../src sync /^.*$","mabatha.jpg","tibetempire.jpg"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom_client__WEBPACK_IMPORTED_MODULE_1__","react_dom_client__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_3__","ReactDOM","createRoot","document","getElementById","render","React","createElement","StrictMode","App","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_TestSlider__WEBPACK_IMPORTED_MODULE_2__","reactjs_popup__WEBPACK_IMPORTED_MODULE_3__","_bib_pdf__WEBPACK_IMPORTED_MODULE_5__","_bib_pdf__WEBPACK_IMPORTED_MODULE_5___default","sliderval","className","Slider","min","max","step","defaultValue","onChange","val","id","Popup","trigger","modal","nested","closeOnDocumentClick","close","style","background","width","height","fontSize","position","top","left","display","flexDirection","alignItems","justifyContent","borderRadius","onClick","padding","overflow","href","bib","without","rel","target","react_slider__WEBPACK_IMPORTED_MODULE_1__","react_slider__WEBPACK_IMPORTED_MODULE_1___default","react_simple_maps__WEBPACK_IMPORTED_MODULE_2__","_geo_json__WEBPACK_IMPORTED_MODULE_3__","_info_json__WEBPACK_IMPORTED_MODULE_4__","reactjs_popup__WEBPACK_IMPORTED_MODULE_5__","_intro_json__WEBPACK_IMPORTED_MODULE_7__","scaler","value","min_time","slope","Math","round","max_time","TestSlider","_ref","setValue","useState","showIntro","setShowIntro","useEffect","markermap","inf","year","startyear","endyear","Marker","key","name","coordinates","lon","lat","fill","color","cursor","text","map","t","type","img","require","concat","src","alt","textAlign","caption","parsedict","textAnchor","dx","length","open","onClose","intro","renderThumb","props","state","Object","assign","marginTop","backgroundColor","snapDragDisabled","fontFamily","fontWeight","toString","MapComponent","ComposableMap","projection","projectionConfig","scale","center","Geographies","geography","data","_ref2","geographies","geo","Geography","rsmKey","stroke","strokeWidth","default","outline","hover","pressed","info","module","exports","p",".","./","./App","./App.css","./App.js","./TestSlider","./TestSlider.css","./TestSlider.js","./bib.pdf","./geo","./geo.json","./index","./index.css","./index.js","./info","./info.json","./intro","./intro.json","./mabatha.jpg","./tibetempire.jpg","webpackContext","req","webpackContextResolve","o","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.81a9e93d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","import './App.css';\nimport React, { useState } from 'react';\nimport Slider from './TestSlider';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport bib from './bib.pdf';\n\nlet sliderval = 0;\n\n\n// TODO: ADD BIB FILE WHEN DONE\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='title'>\n        <h1> A Selected History of Buddhism, Imperialism and Violence </h1>\n      </div>\n      <div className=\"slidecontainer\">\n       <Slider min={0}\n          max={100}\n          step={0.5}\n          defaultValue={sliderval}\n          onChange={(val) => {\n            sliderval = val;\n          }}\n        />\n      </div>\n      <div id=\"nav\">\n        <ul>\n          <li>\n            <Popup\n              trigger={<button>Conclusions</button>}\n              modal\n              nested\n              closeOnDocumentClick\n            >\n              {close => (\n                <div style={{background: \"#ffeecc\", width: \"90vw\", height: \"90vh\", fontSize: \"18px\", position: \"fixed\", top: \"5vh\", left: \"5vw\", display: 'flex', flexDirection: 'column', alignItems: 'left', justifyContent: 'center',\n                borderRadius: \"48px\"}}>\n                  <button className='popupclose' onClick={close}>&times;</button>\n                  <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', height: '100%', padding: \"5vh\", overflow: \"auto\"}}>\n                  <h1>Conclusions</h1> \n                  <p style={{fontSize: 20}}>My exploration of the complex histories of Buddhism and violence led me to a surprising understanding of the role Buddhism plays in governance. Perplexingly, Buddhist governments throughout history have instrumentalized their ecclesiastic authority to shape policies and justify violence. Further, there appears to be a common thread running through the various historical examples I studied. Specifically, a theme of dehumanization and demonization pervades historical examples of Buddhist-incited violence– whether through the Tibetan empire’s military expansion in the name of “maintaining order,” or the portrayal of Japanese imperialism as a “sacred mission” against nonbelievers, or the genocide of the Rohingya people by the Buddhist government of Myanmar in order to “protect Buddhism.” This is somewhat disconcerting: acts of violence are perpetrated under the guise of “maintaining peace”– a central tenet of Buddhist spirituality. Even in contexts where violence is retaliatory, or in self-defense (e.g. in the case of Tibetan rebellions), the perpetration of violence still violates the principle of <i>ahimsa</i>. The annexation of Tibet shows us that a political state cannot exist without the ability to defend itself. </p>\n\n                  <p style={{fontSize: 20}}>In modern global discourse, I believe that a major reason towards the generally sympathetic perception of Buddhist nations is due to the close association between Buddhism and Tibet. Buddhism is often perceived monolithically as Tibetan Buddhism practiced exclusively by monks. This reductionist association implies that Buddhism is entirely a tranquil religion, under threat by external oppressors. I worry that nations such as Myanmar and Bhutan could be exploiting this perception to legitimize their persecution of religious minorities.</p>\n\n                  <p style={{fontSize: 20}}>Overall, my research has further convinced me of the paradoxical existence of Buddhist nationhood. In every historical example of Buddhist governments I explored, I found evidence of violence– whether internal or external. Ultimately, <i>ahimsa</i> is neglected when it is inconvenient. </p>\n\n                </div>\n                </div>\n              )}\n            </Popup>\n          </li>\n          <li>\n          <a href={bib} without rel=\"noopener noreferrer\" target=\"_blank\">\n            {<button>Sources</button>}\n          </a>\n          </li>\n          </ul> \n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from 'react';\nimport Slider from 'react-slider';\nimport { ComposableMap, Geographies, Geography, Marker } from 'react-simple-maps';\nimport data from './geo.json';\nimport info from './info.json';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport intro from './intro.json';\n\nconst scaler = (value) => {\n  if (value > 70) {\n    // linear from (50, 1900) to (100, 2024)\n    const min_time = 1800;\n    const max_time = 2024;\n    // linear from (50, 1900) to (100, 2024)\n    const slope = (max_time - min_time) / (100 - 70);\n    return Math.round(slope * (value - 70) + min_time);\n  }\n  else {\n    const min_time = -500;\n    const max_time = 1800;\n    return Math.round(-(max_time - min_time) / (70 * 70) * (value) * (value - 2 * 70) + min_time);\n  }\n\n}\n\nconst parsedict = (t) => {\n  if (typeof t == \"string\") {\n    return <p style={{fontSize: \"22px\"}}>{t}</p>;\n  } else {\n    if (t.type == \"image\") {\n      const img = require(`${t.src}`);\n      return (\n        <div style={{display: \"flex\", flexDirection: 'column', justifyContent: \"center\", alignItems: \"center\"}}>\n          <img src={img} alt={t.alt} style={{width: \"60%\", height: \"auto\"}}/>\n          <p style={{textAlign: \"left\"}}>{t.caption}</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst TestSlider = ({ min, max, step, defaultValue, onChange }) => {\n  const [value, setValue] = useState(defaultValue);\n  const [showIntro, setShowIntro] = useState(false);\n\n  useEffect(() => {\n    setShowIntro(true); // Show intro popup on component mount\n  }, []);\n\n  const handleSliderChange = (val) => {\n    setValue(val);\n    if (onChange) {\n      onChange(val);\n    }\n  };\n\n  const renderThumb = (props, state) => (\n    <div {...props} style={{ ...props.style, marginTop: '2px', height: '20px', width: '8px', backgroundColor: 'blue', cursor: 'grab'}}>\n    </div>\n  );\n// TODO: handle image refs in JSON.\n  const markermap = (inf, year) => {\n    if (inf.startyear <= year && inf.endyear >= year) {\n      return (\n        <Marker\n          className='marker'\n          key={inf.name}\n          coordinates={[inf.lon, inf.lat]}\n          fill=\"#777\"\n        >\n          <Popup\n            trigger={\n              <circle r={3} fill={inf.color} style={{ cursor: 'pointer' }} />\n            }\n            modal\n            nested\n            closeOnDocumentClick\n          >\n            {close => (\n              <div style={{background: \"#ffeecc\", width: \"90vw\", height: \"90vh\", fontSize: \"18px\", position: \"fixed\", top: \"5vh\", left: \"5vw\", display: 'flex', flexDirection: 'column', alignItems: 'left', justifyContent: 'center',\n              borderRadius: \"48px\"}}>\n                <button className='popupclose' onClick={close}>&times;</button>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'left', height: '100%', padding: \"5vh\", overflow: \"auto\"}}>\n                <h1>{inf.name}</h1> \n                {inf.text.map((t) => (\n                  parsedict(t)\n                ))}\n              </div>\n              </div>\n            )}\n          </Popup>\n          <text textAnchor=\"middle\" dx={inf.name.length*3} fill=\"#000000\" id=\"markertext\" fontSize=\"12px\">\n            {inf.name}\n          </text>\n        </Marker>\n        // </div>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  const MapComponent = () => {\n    const mapStyle = {\n      width: '100%',\n      height: '85vh'\n    };\n    const mapProjectionConfig = {\n      scale: 250,\n      center: [120, 10], // Centered around Eastern Asia\n    };\n\n    return (\n      <div id=\"map\">\n        <ComposableMap projection=\"geoMercator\" projectionConfig={mapProjectionConfig}>\n          <Geographies geography={data}>\n            {({ geographies }) =>\n              geographies.map((geo) => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill=\"rgba(38,50,56,0.2)\"\n                  stroke=\"#000000\"\n                  strokeWidth={0.05}\n                  style={{\n                    default: { outline: \"none\" },\n                    hover: { outline: \"none\" },\n                    pressed: { outline: \"none\" },\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n          {info.map((inf) => markermap(inf, scaler(value)))}\n        </ComposableMap>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {showIntro && (\n        <Popup\n          open\n          modal\n          nested\n          closeOnDocumentClick={false}\n          onClose={() => setShowIntro(false)}\n        >\n          <div style={{background: \"#ffeecc\", width: \"90vw\", height: \"90vh\", fontSize: \"18px\", position: \"fixed\", top: \"5vh\", left: \"5vw\", display: 'flex', flexDirection: 'column', alignItems: 'left', justifyContent: 'center',\n              borderRadius: \"48px\"}}>\n            <button className='popupclose' onClick={() => setShowIntro(false)}>&times;</button>\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', height: '100%', padding: \"5vh\"}}>\n              <h1>Why does this project exist?</h1>\n              {intro.text.map((t) => (\n                <p style={{fontSize: \"18px\"}}>{t}</p>\n              ))}\n              </div>\n          </div>\n        </Popup>\n      )}\n      <div id=\"slider-cont\">\n        <Slider\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={handleSliderChange}\n          renderThumb={renderThumb}\n          snapDragDisabled={true}\n        />\n        <div style={{fontFamily: \"Baskerville\", padding: \"4px\", fontSize: \"24px\", fontWeight: \"600\"}}>Year:  {scaler(value) > 0 ? scaler(value).toString() + \" AD\" : (-scaler(value)).toString() + \" BC\"}</div>\n      </div>\n      <MapComponent />\n    </div>\n  );\n};\n\nexport default TestSlider;\n","module.exports = __webpack_public_path__ + \"static/media/bib.5a9c80f2.pdf\";","var map = {\n\t\".\": 1,\n\t\"./\": 1,\n\t\"./App\": 4,\n\t\"./App.css\": 13,\n\t\"./App.js\": 4,\n\t\"./TestSlider\": 5,\n\t\"./TestSlider.css\": 29,\n\t\"./TestSlider.js\": 5,\n\t\"./bib.pdf\": 10,\n\t\"./geo\": 6,\n\t\"./geo.json\": 6,\n\t\"./index\": 1,\n\t\"./index.css\": 12,\n\t\"./index.js\": 1,\n\t\"./info\": 7,\n\t\"./info.json\": 7,\n\t\"./intro\": 8,\n\t\"./intro.json\": 8,\n\t\"./mabatha.jpg\": 30,\n\t\"./tibetempire.jpg\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 28;","module.exports = __webpack_public_path__ + \"static/media/mabatha.fd32c023.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tibetempire.77f6ff07.jpg\";"],"sourceRoot":""}